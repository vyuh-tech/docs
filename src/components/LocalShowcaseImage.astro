---
interface Entry {
  thumbnail: ImageMetadata;
  title: string;
  description: string;
  href: string;
}

interface Props {
  entries: Entry[];
  columns?: number;
}

const { entries, columns = 3 } = Astro.props;
---

<div class={`grid grid-cols-1 md:grid-cols-2 lg:grid-cols-${columns} gap-6 my-8`}>
  {entries.map(entry => (
    <a 
      href={entry.href} 
      class="group flex flex-col rounded-lg overflow-hidden border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 shadow-sm hover:shadow-md transition-all duration-300 no-underline text-inherit hover:-translate-y-1" 
      target="_blank" 
      rel="noopener"
    >
      <div class="h-40 overflow-hidden flex items-center justify-center bg-gray-50 dark:bg-gray-900 border-b border-gray-100 dark:border-gray-700">
        <img 
          src={entry.thumbnail.src} 
          alt={entry.title} 
          class="w-auto h-auto max-w-[80%] max-h-[80%] object-contain transition-transform duration-300 group-hover:scale-105" 
        />
      </div>
      <div class="p-5 flex-1 flex flex-col">
        <div class="text-lg break-all font-medium text-accent-600 dark:text-accent-200 mb-2 group-hover:text-accent-900 dark:group-hover:text-accent-100 transition-colors">{entry.title}</div>
        <p class="text-sm text-gray-600 dark:text-gray-300 leading-relaxed">{entry.description}</p>
      </div>
    </a>
  ))}
</div>
